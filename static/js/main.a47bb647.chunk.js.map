{"version":3,"sources":["components/Header.js","components/ToDoItem.js","components/ToDoList.js","components/ToDoForm.js","helpers.js","modules/Storage.js","components/App.js","components/Help.js","components/NotFound.js","index.js","components/Router.js"],"names":["Header","props","className","tagline","ToDoItem","e","keyCode","target","blur","todo","this","data","strike","done","data-id","uuid","value","id","type","checked","onChange","toggleToDoDone","htmlFor","style","textDecoration","text","updateTodoText","onKeyUp","handleKeyUp","onClick","removeToDo","Component","ToDoList","Object","keys","items","map","key","React","ToDoForm","textInput","createRef","handleSubmit","preventDefault","current","trim","addToDo","currentTarget","reset","onSubmit","placeholder","ref","aria-hidden","getRandomTagline","Math","floor","random","length","canUseLocalStorage","Error","localStorage","setItem","defaultValue","getItem","removeItem","App","setState","state","toDoItems","checkbox","storageKey","old","Storage","get","JSON","parse","set","stringify","Help","document","title","NotFound","ReactDOM","render","basename","exact","path","component","querySelector"],"mappings":"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","file":"static/js/main.a47bb647.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = props => {\n  return (\n    <header className=\"header\">\n      <h1>what to do?</h1>\n      <span className=\"tagline\">{props.tagline}</span>\n    </header>\n  );\n};\n","import React, { Component } from 'react';\n\nexport class ToDoItem extends Component {\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  }\n\n  render() {\n    const todo = this.props.data;\n\n    let strike = '';\n    todo.done ? (strike = 'line-through') : (strike = 'none');\n\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              value={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.props.toggleToDoDone}\n            ></input>\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            ></label>\n          </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            style={{ textDecoration: strike }}\n            type=\"text\"\n            className=\"form-control\"\n            value={todo.text}\n            onChange={e => {\n              this.props.updateTodoText(todo.uuid, e.target.value);\n            }}\n            onKeyUp={e => {\n              this.handleKeyUp(e);\n            }}\n          ></input>\n        </td>\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={e => this.props.removeToDo(todo.uuid)}\n          ></i>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from 'react';\nimport { ToDoItem } from './ToDoItem';\n\nexport class ToDoList extends React.Component {\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items table table-borderless\">\n          <tbody>\n            {Object.keys(this.props.items).map(uuid => (\n              <ToDoItem\n                key={`todo-item-${uuid}`}\n                data={this.props.items[uuid]}\n                updateTodoText={this.props.updateTodoText}\n                toggleToDoDone={this.props.toggleToDoDone}\n                removeToDo={this.props.removeToDo}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport class ToDoForm extends React.Component {\n  textInput = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const text = this.textInput.current.value.trim();\n    this.props.addToDo(text);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Add new Todo item\"\n          ref={this.textInput}\n        ></input>\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fas fa-plus\" aria-hidden=\"true\"></i> Add Item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","const randomArrayItem = data => {\n  return data[Math.floor(Math.random() * data.length)];\n};\n\nexport const getRandomTagline = () => {\n  const taglines = [\n    'This could be your bucket list',\n    'This could be your shopping list',\n    'This could be your wedding list'\n  ];\n  return randomArrayItem(taglines);\n};\n","class Storage {\n  constructor() {\n    if (!this.canUseLocalStorage()) {\n      throw Error('The Local storage is full or disabled');\n    }\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  get(key, defaultValue = null) {\n    const value = localStorage.getItem(key);\n\n    if (value != null) {\n      return value;\n    }\n    return defaultValue;\n  }\n\n  canUseLocalStorage() {\n    let test = 'test';\n    try {\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default new Storage();\n","import React from 'react';\n\nimport { Header } from './Header';\nimport { ToDoList } from './ToDoList';\nimport { ToDoForm } from './ToDoForm';\nimport '../sass/style.scss';\nimport uuid from 'uuid/v4';\nimport { getRandomTagline } from '../helpers.js';\nimport Storage from '../modules/Storage';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.storageKey = 'react-todo';\n    const old = Storage.get(this.storageKey);\n\n    if (old) {\n      this.state = JSON.parse(old);\n    } else {\n      this.state = {\n        toDoItems: {}\n      };\n      //Storage.set(this.storageKey, JSON.stringify(this.state));\n    }\n  }\n\n  componentDidUpdate() {\n    Storage.set(this.storageKey, JSON.stringify(this.state));\n  }\n\n  addToDo = text => {\n    const todo = {\n      uuid: uuid(),\n      text: text,\n      done: false\n    };\n\n    this.setState(state => {\n      state.toDoItems[todo.uuid] = todo;\n      return state;\n    });\n  };\n\n  updateTodoText = (uuid, text) => {\n    this.setState(state => {\n      state.toDoItems[uuid].text = text;\n      return state;\n    });\n  };\n\n  toggleToDoDone = e => {\n    const checkbox = e.target;\n    this.setState(state => {\n      state.toDoItems[checkbox.value].done = checkbox.checked;\n      return state;\n    });\n  };\n\n  removeToDo = uuid => {\n    this.setState(state => {\n      delete state.toDoItems[uuid];\n      return state;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline={getRandomTagline()} />\n        <ToDoForm addToDo={this.addToDo} />\n        <ToDoList\n          items={this.state.toDoItems}\n          updateTodoText={this.updateTodoText}\n          toggleToDoDone={this.toggleToDoDone}\n          removeToDo={this.removeToDo}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Header } from './Header';\n\nexport class Help extends React.Component {\n  componentDidMount() {\n    document.title = 'Help | What to do?';\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline=\"Your questions will be answered here.\" />\n        <p>Where is the data stored?</p>\n        <p>We store all information in your browser's LocalStorage.</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Header } from './Header';\n\nexport class NotFound extends React.Component {\n  componentDidMount() {\n    document.title = 'Error 404 | What to do?';\n  }\n\n  render() {\n    return (\n      <div className=\"conatainer\">\n        <Header tagline=\"404 - Page not found!\" />\n        <div className=\"alert alert-warning\">\n          <strong>\n            Oops....sorry!\n            <br />\n          </strong>\n          The requested page could not be found.\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Router } from './components/Router';\n\nReactDOM.render(<Router />, document.querySelector('#root'));\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { App } from './App';\nimport { Help } from './Help';\nimport { NotFound } from './NotFound';\n\nexport const Router = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/help\" component={Help} />\n      <Route component={NotFound} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}